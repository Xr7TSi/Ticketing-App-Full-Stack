{"version":3,"sources":["components/login/loginSlice.js","api/userAPI.js","pages/dashboard/userSlice.js","pages/dashboard/userAction.js","components/login/Login.comp.js","components/password-reset/passwordSlice.js","api/passwordAPI.js","components/password-reset/ResetPassword.comp.js","components/password-reset/passwordAction.js","pages/entry/Entry.page.js","components/password-reset/UpdatePasswordForm.comp.js","pages/password-reset/passwordOtpForm.page.js","components/dashboard-table/DashboardTable.comp.js","components/breadcrumb/Breadcrumb.comp.js","pages/manage-tickets/ticketSlice.js","api/ticketAPI.js","pages/manage-tickets/ticketsAction.js","components/layout/partials/Header.comp.js","components/layout/DefaultLayout.js","pages/dashboard/Dashboard.page.js","components/add-ticket-form/addTicketSlice.js","components/add-ticket-form/addTicketAction.js","components/add-ticket-form/AddTicketForm.comp.js","utils/validation.js","pages/new-ticket/AddTicket.page.js","components/search-form/SearchBySubjectForm.comp.js","components/search-form/SearchByIdForm.comp.js","components/ticket-table/TicketTable.comp.js","pages/manage-tickets/OpenTickets.page.js","pages/manage-tickets/ClosedTickets.page.js","components/message-history/MessageHistory.comp.js","components/update-ticket/UpdateTicket.comp.js","pages/ticket/Ticket.page.js","components/registration-form/userRegistrationSlice.js","components/registration-form/RegistrationForm.comp.js","components/registration-form/userRegistrationAction.js","pages/registration/Registration.page.js","pages/user-verification/UserVerification.page.js","App.js","store.js","index.js"],"names":["loginSlice","createSlice","name","initialState","isLoading","isAuth","error","reducers","loginPending","state","loginSuccess","loginFail","payload","reducer","actions","userRegistration","formData","Promise","resolve","reject","a","axios","post","rootURL","res","data","status","message","userRegistrationVerification","patch","userProfileURL","userLogin","sessionStorage","setItem","accessJWT","localStorage","JSON","stringify","refreshJWT","userSlice","user","getUserPending","getUserSuccess","getUserFailure","getUserProfile","dispatch","getItem","get","headers","Authorization","result","_id","LoginForm","formSwitcher","useState","email","setEmail","password","setPassword","useDispatch","useSelector","login","navigate","useNavigate","useEffect","handleOnChange","e","target","value","handleOnSubmit","preventDefault","alert","Container","Row","Col","className","Alert","variant","Form","autoComplete","onSubmit","Group","Label","Control","type","onChange","placeholder","required","style","marginTop","Button","Spinner","animation","href","onClick","passwordReset","showUpdatePasswordForm","otpReqPending","otpReqSuccess","updatePasswordSuccess","otpReqFailure","reqPasswordOtp","console","log","updateUserPassword","passwordObj","ResetPassword","sendPasswordResetOtp","styles","jumbotron","backgroundColor","paddingTop","paddingBottom","paddingLeft","paddingRight","borderRadius","boxShadow","Entry","frmLoad","setFrmLoad","frmType","handleOnResetSubmit","pin","confirmPassword","passwordVerificationError","isLongEnough","hasUpperCase","hasLowerCase","hasNumber","hasSpecial","UpdatePasswordForm","newPassword","setNewPassword","passwordError","setPasswordError","length","test","disabled","Object","values","includes","PasswordOtpForm","DashboardTable","tickets","searchTicketList","firstFiveTickets","slice","Table","striped","bordered","hover","map","row","key","to","subject","openedAt","Date","toLocaleString","conversations","sender","colSpan","PageBreadcrumb","page","Breadcrumb","Item","active","ticketListSlice","replyTicketError","selectedTicket","fetchTicketLoading","fetchTicketSuccess","action","fetchTicketFailure","resetReplyMsg","replyMsg","searchTicketsBySubject","filter","toLowerCase","searchTicketsById","fetchSingleTicketLoading","fetchSingleTicketSuccess","fetchSingleTicketFailure","replyTicketLoading","replyTicketSuccess","replyTicketFailure","closeTicketLoading","closeTicketSuccess","closeTicketFailure","searchTicketsByOwner","getSingleTicket","addReplyToTicket","msgObj","put","updateTicketStatusClosed","createNewTicket","fetchSingleTicket","logo","marginLeft","linkStyle","color","textDecoration","marginRight","Header","Navbar","collapseOnSelect","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","linkPosition","removeItem","DefaultLayout","children","Dashboard","totalTickets","openTickets","ticket","ticketURL","fontSize","padding","newTicketSlice","successMsg","openNewTicketPending","openNewTicketSuccess","openNewTicketFailure","resetSuccessMsg","openNewTicket","maxWidth","initialFormData","issueDate","initialFormDataError","AddTicketForm","setFormData","formDataError","setFormDataError","str","isSubjectValid","as","column","sm","Text","date","rows","width","AddTicket","SearchBySubjectForm","SearchByIdForm","TicketTable","OpenTickets","ClosedTickets","MessageHistory","msg","index","msgAt","UpdateTicket","setMessage","replyToTicket","Ticket","tId","useParams","userRegistrationSlice","registrationPending","registrationSuccess","registrationFailure","phone","company","RegistrationForm","newUser","setNewUser","registration","Registration","initialResponse","UserVerification","response","setResponse","apiCall","display","justifyContent","App","PrivateRoute","updateAccessJWT","parse","path","element","store","configureStore","ticketsReducer","loginReducer","userReducer","newTicketReducer","registrationReducer","passwordReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.265aa481.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  isAuth: false,\n  error: \"\",\n};\n\nconst loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    loginPending: (state) => {\n      state.isLoading = true;\n    },\n    loginSuccess: (state) => {\n      state.isLoading = false;\n      state.isAuth = true;\n    },\n    loginFail: (state, {payload}) => {\n        state.isLoading = false;\n        state.error = payload;\n        }\n  },\n});\n\nconst { reducer, actions } = loginSlice;\n\nexport const { loginPending, loginSuccess, loginFail } = actions;\n\nexport default reducer","import axios from \"axios\";\n\n\nconst rootURL = \"/v1/\";\nconst loginURL = rootURL + \"user/login\";\nconst userProfileURL = rootURL + \"user\";\nconst logoutURL = rootURL + \"user/logout\";\nconst newAccessJWT = rootURL + \"tokens\";\nconst userVerificationURL = userProfileURL + \"/verify\";\n\n\nexport const userRegistration = (formData) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await axios.post(userProfileURL, formData);\n\n      if (res.data.status === \"success\") {\n       resolve(res.data);\n      }\n\n      resolve(res.data);\n    } catch (error) {\n      reject(\"Error at userRegistration / \" + error.message);\n    }\n  });\n};\n\nexport const userRegistrationVerification = (formData) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await axios.patch(userVerificationURL, formData);\n      \n\n      if (res.data.status === \"success\") {\n       resolve(res.data);\n      }\n\n      resolve(res.data);\n    } catch (error) {\n      reject(\"Error at userRegistrationVerification / \" + error);\n    }\n  });\n};\n\nexport const userLogin = (formData) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const res = await axios.post(loginURL, formData);\n\n      if (res.data.status === \"success\") {\n        sessionStorage.setItem(\"accessJWT\", res.data.accessJWT);\n        localStorage.setItem(\n          \"crmSite\",\n          JSON.stringify({ refreshJWT: res.data.refreshJWT })\n        );\n      }\n\n      resolve(res.data);\n    } catch (error) {\n      reject(\"Error at userLogin / \" + error.message);\n    }\n  });\n};\n\nexport const fetchUser = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const accessJWT = sessionStorage.getItem(\"accessJWT\");\n\n      if (!accessJWT) {\n        reject(\"No accessJWT in sessionStorage\");\n      }\n\n      const res = await axios.get(userProfileURL, {\n        headers: {\n          Authorization: accessJWT,\n        },\n      });\n      resolve(res.data);\n\n      resolve(res.data);\n    } catch (error) {\n      reject(\"Error at getUser / \" + error.message);\n    }\n  });\n};\n\nexport const fetchNewAccessJWT = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // crmSite is the refreshJWT in local storage, stored as an object\n      const { refreshJWT } = JSON.parse(localStorage.getItem(\"crmSite\"));\n\n      if (!refreshJWT) {\n        reject(\"Token not found!\");\n      }\n\n      const res = await axios.get(newAccessJWT, {\n        headers: {\n          Authorization: refreshJWT,\n        },\n      });\n\n      if (res.data.status === \"success\") {\n        sessionStorage.setItem(\"accessJWT\", res.data.accessJWT);\n      }\n\n      resolve(true);\n    } catch (error) {\n      // remove crmSite value from local storage since it is invalid\n      if (error.message === \"Request failed with status code 403\") {\n        localStorage.removeItem(\"crmSite\");\n      }\n\n      reject(false);\n    }\n  });\n};\n\nexport const userLogout = async () => {\n  try {\n    await axios.delete(logoutURL, {\n      headers: {\n        Authorization: sessionStorage.getItem(\"accessJWT\"),\n      },\n    });\n  } catch (error) {\n    console.log(\"Error at userLogout / \" + error.message);\n  }\n};\n\n\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  user: {},\n  isLoading: false,\n  error: \"\",\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    getUserPending: (state) => {\n      state.isLoading = true;\n    },\n    getUserSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.user = payload;\n      state.error = \"\";\n    },\n    getUserFailure: (state, { payload }) => {\n      state.isLoading = false;\n      state.error = payload;\n    },\n  },\n});\n\nconst { reducer, actions } = userSlice;\n\nexport const { getUserPending, getUserSuccess, getUserFailure } = actions;\n\nexport default reducer;\n","import { fetchUser } from \"../../api/userAPI\";\nimport { getUserPending, getUserSuccess, getUserFailure } from \"./userSlice\";\n\nexport const getUserProfile = () => async (dispatch) => {\n  try {\n    dispatch(getUserPending());\n\n    const result = await fetchUser();\n\n    if (result.user && result.user._id) {\n      return dispatch(getUserSuccess(result.user));\n    };\n    dispatch(getUserFailure(\"User not found.\"));\n  } catch (error) {\n    dispatch(getUserFailure(error));\n  };\n};\n","import React, { useState, useEffect } from \"react\";\n// PropTypes is used to validate the props that are passed to the component.  See rules at bottom of this file\nimport PropTypes from \"prop-types\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport { loginPending, loginSuccess, loginFail } from \"./loginSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userLogin } from \"../../api/userAPI\";\nimport { useNavigate } from \"react-router-dom\";\nimport { getUserProfile } from \"../../pages/dashboard/userAction\";\n\nexport const LoginForm = ({ formSwitcher }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const { isLoading, isAuth, error } = useSelector((state) => state.login);\n  const navigate = useNavigate();\n\n  // if accessJWT is in session storage, redirect to dashboard because user is already logged in, login page isn't needed\n  useEffect(() => {\n    // sessionStorage is not persisting when a new tab is opened along with the current tab.  This is unexpected.\n    sessionStorage.getItem(\"accessJWT\") && navigate(\"/dashboard\");\n  }, [navigate, isAuth]);\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    // switch statement updates the email value on the form on Login.comp.js each time text is entered\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // form submit handler for Login component\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!email) {\n      return alert(\"Please enter your email address.\");\n    }\n    dispatch(loginPending());\n\n    try {\n      const isAuth = await userLogin({ email, password });\n      if (isAuth.status === \"error\") {\n        return dispatch(loginFail(isAuth.message));\n      }\n      dispatch(loginSuccess());\n      dispatch(getUserProfile());\n      navigate(\"/dashboard\");\n    } catch (error) {\n      dispatch(loginFail(error));\n    }\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-primary\">Login</h1>\n          {/* hr/ creates horizontal line */}\n          <hr />\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          <Form autoComplete=\"off\" onSubmit={handleOnSubmit}>\n            <Form.Group>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                // value is the text displayed in the input field.\n                value={email}\n                onChange={handleOnChange}\n                placeholder=\"Enter email\"\n                // required validates input field is in email format\n                required\n              />\n            </Form.Group>\n            <Form.Group style={{ marginTop: \"10px\" }}>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleOnChange}\n                placeholder=\"Enter Password\"\n                required\n              />\n            </Form.Group>\n            <div className=\"text-center\">\n            <Button style={{ marginTop: \"18px\" }} type=\"submit\">\n              Login\n            </Button>\n            </div>\n            \n            {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n          </Form>\n          <hr />\n        </Col>\n      </Row>\n      <Row >\n        <Col className=\"text-center\" >\n          <a href=\"/password-reset\">\n            Forgot Password?\n          </a>\n        </Col>\n      </Row>\n      <Row>\n      <Col className=\"py-4 text-center\">\n        First time here? { \" \"} \n          <a href=\"/registration\" onClick={() => formSwitcher(\"reset\")}>\n            Sign Up\n          </a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nLoginForm.propTypes = {\n  formSwitcher: PropTypes.func.isRequired,\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  status: \"\",\n  message: \"\",\n  showUpdatePasswordForm: false,\n  email: \"\",\n};\n\nconst passwordReset = createSlice({\n  name: \"passwordReset\",\n  initialState,\n  reducers: {\n    otpReqPending: (state) => {\n      state.isLoading = true;\n    },\n    otpReqSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.status = \"success\";\n      state.message = payload.message;\n      state.email = payload.email;\n      state.showUpdatePasswordForm = true;\n    },\n    updatePasswordSuccess: (state, { payload }) => {\n      state.isLoading = false;\n      state.status = \"success\";\n      state.message = payload.message;\n    },\n    otpReqFailure: (state, { payload }) => {\n      state.isLoading = false;\n      state.status = \"error\";\n      state.message = payload.message;\n    },\n  },\n});\n\nconst { reducer, actions } = passwordReset;\n\nexport const { otpReqPending, otpReqSuccess, updatePasswordSuccess, otpReqFailure } = actions;\n\nexport default reducer;\n","import axios from \"axios\";\n\nconst rootURL = \"/v1/\";\nconst otpRequestURL = rootURL + \"user/reset-password\";\n\n\nexport const reqPasswordOtp = (email) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.post(otpRequestURL, { email });\n      resolve(data);\n    } catch (error) {\n      reject(error);\n      console.log(\"Error at reqPasswordOtp / \" + error);\n    }\n  });\n};\n\nexport const updateUserPassword = passwordObj => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const { data } = await axios.patch(otpRequestURL, passwordObj);\n      resolve(data);\n    } catch (error) {\n      reject(error);\n      console.log(\"Error at updateUserPassword / \" + error);\n    }\n  });\n};\n\n\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Alert,\n  Spinner,\n} from \"react-bootstrap\";\nimport { sendPasswordResetOtp } from \"./passwordAction\";\n\nexport const ResetPassword = () => {\n  const dispatch = useDispatch();\n\n  const [email, setEmail] = useState(\"\");\n\n  const { isLoading, status, message } = useSelector((state) => state.password);\n\n  const handleOnResetSubmit = (e) => {\n    e.preventDefault();\n    dispatch(sendPasswordResetOtp(email));\n  };\n\n  const handleOnChange = (e) => {\n    const { value } = e.target;\n    setEmail(value);\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-primary\">Reset Password</h1>\n          {/* hr/ creates horizontal line */}\n          <hr />\n          {message && (\n            <Alert variant={status === \"success\" ? \"success\" : \"danger\"}>\n              {message}\n            </Alert>\n          )}\n          {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n          <Form autoComplete=\"off\" onSubmit={handleOnResetSubmit}>\n            <Form.Group>\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                // value is the text displayed in the input field.\n                value={email}\n                onChange={handleOnChange}\n                placeholder=\"Enter email\"\n                // required validates input field is in email format\n                required\n              />\n            </Form.Group>\n            <div className=\"text-center\">\n              <Button style={{ marginTop: \"18px\" }} type=\"submit\">\n                Reset Password\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n      <Row></Row>\n    </Container>\n  );\n};\n","import { otpReqPending, otpReqSuccess, updatePasswordSuccess, otpReqFailure } from \"./passwordSlice\";\n\nimport { reqPasswordOtp, updateUserPassword } from \"../../api/passwordAPI\";\n\n// export const sendPasswordResetOtp = (email) => async (dispatch) => {\n//   try {\n//     dispatch(otpReqPending());\n\n//     const result = await reqPasswordOtp(email);\n\n//     result.status === \"success\" \n//     ? dispatch(otpReqSuccess(result.message))\n//     : dispatch(otpReqFailure(result.message));\n\n//   } catch (error) {\n//     console.log(\"Error at sendPasswordResetOtp / \" + error);\n//     dispatch(otpReqFailure(error.message));\n//   }\n// };\n\nexport const sendPasswordResetOtp = email => async dispatch => {\n  try {\n    dispatch(otpReqPending());\n\n    const { status, message } = await reqPasswordOtp(email);\n\n    if (status === \"success\") {\n      return dispatch(otpReqSuccess({ message , email}));\n    }\n    \n    dispatch(otpReqFailure(message))\n\n  } catch (error) {\n    console.log(\"Error at sendPasswordResetOtp / \" + error);\n    dispatch(otpReqFailure(error.message));\n  }\n};\n\nexport const updatePassword = formData => async (dispatch) => {\n  try {\n    dispatch(otpReqPending());\n\n    const result = await updateUserPassword(formData);\n\n    result.status === \"success\" \n    ? dispatch(updatePasswordSuccess(result.message))\n    : dispatch(otpReqFailure(result.message));\n\n  } catch (error) {\n    console.log(\"Error at updatePassword / \" + error);\n    dispatch(otpReqFailure(error.message));\n  }\n};\n","import React, { useState } from \"react\";\nimport { LoginForm } from \"../../components/login/Login.comp\";\nimport { ResetPassword } from \"../../components/password-reset/ResetPassword.comp\";\nimport \"./entry.style.css\";\n\nconst styles = {\n  jumbotron: {\n    backgroundColor: \"white\",\n    // defines size of area around text\n    paddingTop: \"4rem\",\n    paddingBottom: \"4rem\",\n    paddingLeft: \"2rem\",\n    paddingRight: \"2rem\",\n    // rounds the edges\n    borderRadius: \"0.5rem\",\n    boxShadow: \"0px 0px 15px -7px black\",\n  },\n};\n\nexport const Entry = () => {\n  const [frmLoad, setFrmLoad] = useState(\"login\");\n \n  // form submit handler for ResetPassword component\n  const handleOnResetSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  // frmType parameter is determined by onCLick functions on Login.comp and ResetPassword.comp\n  const formSwitcher = frmType => {\n    setFrmLoad(frmType);\n  }\n\n  if (frmLoad === \"login\") {\n    return (\n      <div className=\"entry-page bg-dark\">\n        <div style={styles.jumbotron}>\n          <LoginForm\n            formSwitcher={formSwitcher}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  if (frmLoad === \"reset\") {\n    return (\n      <div className=\"entry-page bg-dark\">\n        <div style={styles.jumbotron}>\n          <ResetPassword\n            // handleOnChange={handleOnChange}\n            handleOnResetSubmit={handleOnResetSubmit}\n            formSwitcher={formSwitcher}\n            // email={email}\n          />\n        </div>\n      </div>\n    );\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { updatePassword } from \"./passwordAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\n\nconst initialState = {\n  pin: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst passwordVerificationError = {\n  isLongEnough: false,\n  hasUpperCase: false,\n  hasLowerCase: false,\n  hasNumber: false,\n  hasSpecial: false,\n  confirmPassword: false,\n};\n\nconst UpdatePasswordForm = () => {\n  const dispatch = useDispatch();\n  const [newPassword, setNewPassword] = useState(initialState);\n  const [passwordError, setPasswordError] = useState(passwordVerificationError);\n\n  const { isLoading, status, message, email } = useSelector(\n    (state) => state.password\n  );\n\n  //   re-renders component when newPassword receives input\n  useEffect(() => {}, [newPassword]);\n\n  //   show text in field as text is entered\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setNewPassword({ ...newPassword, [name]: value });\n\n    if (name === \"password\") {\n      // sets value of each variable to true if the password meets the criteria\n      const isLongEnough = value.length >= 8;\n      const hasUpperCase = /[A-Z]/.test(value);\n      const hasLowerCase = /[a-z]/.test(value);\n      const hasNumber = /[0-9]/.test(value);\n      const hasSpecial =\n        /[ !,\",#,$,%,&,',(,),*,+,-,.,/,:,;,<,=,>,?,@,[,^,_,`,{,|,} ]/.test(\n          value\n        );\n\n      setPasswordError({\n        ...passwordError,\n        isLongEnough,\n        hasUpperCase,\n        hasLowerCase,\n        hasNumber,\n        hasSpecial,\n      });\n    }\n    // when confirm password field receives input, confirmPassword is set to true if newUser.password == the value input into confirm password\n    if (name === \"confirmPassword\") {\n      setPasswordError({\n        ...passwordError,\n        confirmPassword: newPassword.password === value,\n      });\n    }\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const { pin, password } = newPassword;\n    const newPasswordObj = {\n      pin,\n      newPassword: password,\n      email,\n    };\n    dispatch(updatePassword(newPasswordObj));\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-primary\">Password Update</h1>\n        </Col>\n      </Row>\n      <hr />\n\n      <Row>\n        <Col>\n          {message && (\n            <Alert variant={status === \"success\" ? \"success\" : \"danger\"}>\n              {message}\n            </Alert>\n          )}\n          {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Form onSubmit={handleOnSubmit}>\n            <Form.Group className=\"mb-3\">\n              <Form.Label>PIN</Form.Label>\n              <Form.Control\n                type=\"number\"\n                name=\"pin\"\n                value={newPassword.pin}\n                onChange={handleOnChange}\n                placeholder=\"pin\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>New Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={newPassword.password}\n                onChange={handleOnChange}\n                placeholder=\"Password\"\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\">\n              <Form.Label>Confirm New Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={newPassword.confirmPassword}\n                onChange={handleOnChange}\n                placeholder=\"Confirm Password\"\n              />\n            </Form.Group>\n\n            <ul className=\"mb-4\">\n              {/* ternary operators to determine className applied to text */}\n              <li\n                className={\n                  passwordError.isLongEnough ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least 8 characters {\"\"}\n                {passwordError.isLongEnough ? <>&#10003;</> : \"\"}\n              </li>\n              <li\n                className={\n                  passwordError.hasUpperCase ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one upper case letter {\"\"}\n                {passwordError.hasUpperCase ? <>&#10003;</> : \"\"}\n              </li>\n              <li\n                className={\n                  passwordError.hasLowerCase ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one lower case letter {\"\"}\n                {passwordError.hasLowerCase ? <>&#10003;</> : \"\"}\n              </li>\n              <li\n                className={\n                  passwordError.hasNumber ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one number {\"\"}\n                {passwordError.hasNumber ? <>&#10003;</> : \"\"}\n              </li>\n              <li\n                className={\n                  passwordError.hasSpecial ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one special character {\"\"}\n                {passwordError.hasSpecial ? <>&#10003;</> : \"\"}\n              </li>\n\n              <li\n                className={\n                  passwordError.confirmPassword ? \"text-success\" : \"text-danger\"\n                }\n              >\n                Passwords match {\"\"}\n                {passwordError.confirmPassword ? <>&#10003;</> : \"\"}\n              </li>\n            </ul>\n            <div className=\"text-center\">\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={Object.values(passwordError).includes(false)}\n              >\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n      <Row className=\"py-3\">\n        <Col className=\"text-center\">\n          <a href=\"/\">Login</a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default UpdatePasswordForm;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ResetPassword } from \"../../components/password-reset/ResetPassword.comp\";\nimport UpdatePasswordForm from \"../../components/password-reset/UpdatePasswordForm.comp\";\nimport \"./passwordOtpForm.style.css\";\n\nconst styles = {\n  jumbotron: {\n    backgroundColor: \"white\",\n    // defines size of area around text\n    paddingTop: \"4rem\",\n    paddingBottom: \"4rem\",\n    paddingLeft: \"2rem\",\n    paddingRight: \"2rem\",\n    // rounds the edges\n    borderRadius: \"0.5rem\",\n    boxShadow: \"0px 0px 15px -7px black\",\n  },\n};\n\nexport const PasswordOtpForm = () => {\n  const { showUpdatePasswordForm } = useSelector((state) => state.password);\n\n  return (\n    <div className=\"entry-page bg-dark\">\n      <div style={styles.jumbotron}>\n        {showUpdatePasswordForm ? <UpdatePasswordForm /> : <ResetPassword />}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const DashboardTable = () => {\n  const { searchTicketList, tickets, isLoading, error } = useSelector(\n    (state) => state.tickets\n  );\n\n  // start at index 0, return 5 tickets\n  const firstFiveTickets = searchTicketList.slice(0, 5);\n\n  if (isLoading) return <h3>Loading...</h3>;\n\n  if (error) return <h3>{error}</h3>;\n\n  return (\n    <Table striped bordered hover>\n      {/* <thead? groups header content in the table */}\n      <thead>\n        {/* <tr>defines a row of cells in the table */}\n        <tr>\n          {/* <th> defines the header cells in the table */}\n          <th>Subject</th>\n          <th>Status</th>\n          <th>Opened Date</th>\n          <th>Ticket ID</th>\n          <th>Opened By</th>\n        </tr>\n      </thead>\n      <tbody>\n        {/* ternary operator is used to populate table with No Tickets Exist message if there are not tickets */}\n        {tickets.length ? (\n          firstFiveTickets.map((row) => (\n            <tr key={row._id}>\n               <td>\n                {/* the link below adds the selected ticket's id as a parameter to the /tickets:tId route */}\n                <Link to={`/ticket/${row._id}`}>{row.subject}</Link>\n              </td>\n              <td>{row.status}</td>\n              <td>{row.openedAt && new Date(row.openedAt).toLocaleString()}</td>\n              <td>{row._id}</td>\n              <td>{row.conversations[0].sender}</td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan=\"4\" className=\"text-center\">\n              No Tickets Exist\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n};\n\n\n\n\n\n\n\n\n\n\n","import React from \"react\";\nimport { Breadcrumb } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n\nexport const PageBreadcrumb = ({ page }) => {\n  return (\n    <Breadcrumb>\n      <LinkContainer to=\"/\">\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\n      </LinkContainer>\n      <Breadcrumb.Item active>{page}</Breadcrumb.Item>\n    </Breadcrumb>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState = {\n  tickets: [],\n  isLoading: false,\n  error: \"\",\n  replyTicketError: \"\",\n  searchTicketList: [],\n  selectedTicket: {},\n};\n\nconst ticketListSlice = createSlice({\n  name: \"ticketList\",\n  initialState,\n  reducers: {\n    fetchTicketLoading: (state) => {\n      state.isLoading = true;\n    },\n    fetchTicketSuccess: (state, action) => {\n      state.tickets = action.payload;\n      state.searchTicketList = action.payload;\n      state.isLoading = false;\n    },\n    fetchTicketFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    resetReplyMsg: (state) => {\n      state.isLoading = false;\n      state.replyMsg = \"\";\n    },\n    searchTicketsBySubject: (state, action) => {\n      state.searchTicketList = state.tickets.filter((row) => {\n        if (!action.payload) return row;\n\n        return row.subject.toLowerCase().includes(action.payload.toLowerCase());\n      });\n    },\n\n    // row._id need to be replaced with owner data\n    // searchTicketsByOwner: (state, action) => {\n    //   state.searchTicketList = state.tickets.filter((row) => {\n    //     if (!action.payload) return row;\n\n    //     return row.conversations.sender.toLowerCase().includes(action.payload.toLowerCase());\n    //   });\n    // },\n\n    searchTicketsById: (state, action) => {\n      state.searchTicketList = state.tickets.filter((row) => {\n        if (!action.payload) return row;\n\n        return row._id.toLowerCase().includes(action.payload.toLowerCase());\n      });\n    },\n\n    fetchSingleTicketLoading: (state) => {\n      state.isLoading = true;\n    },\n    fetchSingleTicketSuccess: (state, action) => {\n      state.selectedTicket = action.payload;\n      state.isLoading = false;\n      state.error = \"\";\n    },\n    fetchSingleTicketFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n\n    replyTicketLoading: (state) => {\n      state.isLoading = true;\n    },\n    replyTicketSuccess: (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.replyMsg = action.payload;\n\n    },\n    replyTicketFailure: (state, action) => {\n      state.isLoading = false;\n      state.replyTicketError = action.payload;\n    },\n\n    closeTicketLoading: (state) => {\n      state.isLoading = true;\n    },\n    closeTicketSuccess: (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.replyMsg = action.payload;\n    },\n    closeTicketFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nconst { reducer, actions } = ticketListSlice;\n\nexport const {\n  fetchTicketLoading,\n  fetchTicketSuccess,\n  fetchTicketFailure,\n  resetReplyMsg,\n  searchTicketsBySubject,\n  searchTicketsByOwner,\n  searchTicketsById,\n  fetchSingleTicketLoading,\n  fetchSingleTicketSuccess,\n  fetchSingleTicketFailure,\n  replyTicketLoading,\n  replyTicketSuccess,\n  replyTicketFailure,\n  closeTicketLoading,\n  closeTicketSuccess,\n  closeTicketFailure,\n} = actions;\n\nexport default reducer;\n","import axios from \"axios\";\n\nconst rootURL = \"/v1/\";\n\nconst ticketURL = rootURL + \"ticket/\";\nconst getAllTicketsURL = ticketURL + \"all-tickets/\";\nconst getAllOpenTicketsURL = ticketURL + \"all-open-tickets/\";\nconst getAllClosedTicketsURL = ticketURL + \"all-closed-tickets/\";\nconst closeTicketURL = rootURL + \"ticket/close-ticket/\";\n\nexport const getAllTickets = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(getAllTicketsURL, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n      resolve(result);\n    } catch (error) {\n      reject(\"Error at getAllTickets / \" + error);\n    }\n  });\n};\n\n\nexport const getAllOpenTickets = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(getAllOpenTicketsURL, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n      resolve(result);\n    } catch (error) {\n      reject(\"Error at getAllOpenTickets / \" + error);\n    }\n  });\n};\n\nexport const getAllClosedTickets = () => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(getAllClosedTicketsURL, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n      resolve(result);\n    } catch (error) {\n      reject(\"Error at getAllClosedTickets / \" + error);\n    }\n  });\n};\n\nexport const getSingleTicket = (_id) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.get(ticketURL + _id, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n      resolve(result);\n    } catch (error) {\n      reject(\"Error at getSingleTicket / \" + error);\n    }\n  });\n};\n\nexport const addReplyToTicket = (_id, msgObj) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.put(ticketURL + _id, msgObj, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n      resolve(result.data);\n    } catch (error) {\n      reject(\"Error at addReplyToTicket / \" + error);\n    }\n  });\n};\n\nexport const updateTicketStatusClosed = (_id) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      // patch method expects to have a body, hence the empty object {}\n      const result = await axios.patch(\n        closeTicketURL + _id,\n        {},\n        {\n          headers: {\n            Authorization: sessionStorage.getItem(\"accessJWT\"),\n          },\n        }\n      );\n      resolve(result.data);\n    } catch (error) {\n      reject(\"Error at updateTicketStatusClosed / \" + error);\n    }\n  });\n};\n\nexport const createNewTicket = (formData) => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const result = await axios.post(ticketURL, formData, {\n        headers: {\n          Authorization: sessionStorage.getItem(\"accessJWT\"),\n        },\n      });\n\n      resolve(result.data);\n    } catch (error) {\n      console.log(error.message);\n      reject(\"Error at createNewTicket / \" + error);\n    }\n  });\n};\n","import {\n  fetchTicketLoading,\n  fetchTicketSuccess,\n  fetchTicketFailure,\n  searchTicketsBySubject,\n  searchTicketsByOwner,\n  searchTicketsById,\n  fetchSingleTicketLoading,\n  fetchSingleTicketSuccess,\n  fetchSingleTicketFailure,\n  replyTicketLoading,\n  replyTicketSuccess,\n  replyTicketFailure,\n  closeTicketLoading,\n  closeTicketSuccess,\n  closeTicketFailure,\n} from \"./ticketSlice\";\nimport {\n  getAllTickets,\n  getAllOpenTickets,\n  getAllClosedTickets,\n  getSingleTicket,\n  addReplyToTicket,\n  updateTicketStatusClosed\n} from \"../../api/ticketAPI\";\n\nexport const fetchAllTickets = () => async (dispatch) => {\n  dispatch(fetchTicketLoading());\n\n  try {\n    const result = await getAllTickets();\n\n    // if there are tickets, dispatch \n    result.data.result.length && dispatch(fetchTicketSuccess(result.data.result));\n  } catch (error) {\n    dispatch(fetchTicketFailure(\"Error at fetchAllTickets / \" + error.message));\n  }\n};\n\n// export const fetchAllOpenTickets = () => async (dispatch) => {\n//   dispatch(fetchTicketLoading());\n\n//   try {\n//     const result = await getAllOpenTickets();\n\n//     // if there are tickets, dispatch \n//     result.data.result.length && dispatch(fetchTicketSuccess(result.data.result));\n//   } catch (error) {\n//     dispatch(fetchTicketFailure(\"Error at fetchAllOpenTickets / \" + error.message));\n//   }\n// };\n\nexport const fetchAllOpenTickets = () => async (dispatch) => {\n  dispatch(fetchTicketLoading());\n\n  try {\n    const result = await getAllOpenTickets();\n\n    // if there are tickets, dispatch \n    result.data.result.length && dispatch(fetchTicketSuccess(result.data.result));\n  } catch (error) {\n    dispatch(fetchTicketFailure(\"There are no open tickets at the moment.\"));\n  }\n};\n\n// export const fetchAllClosedTickets = () => async (dispatch) => {\n//   dispatch(fetchTicketLoading());\n\n//   try {\n//     const result = await getAllClosedTickets();\n\n//     // if there are tickets, dispatch \n//     result.data.result.length && dispatch(fetchTicketSuccess(result.data.result));\n//   } catch (error) {\n//     dispatch(fetchTicketFailure(\"Error at fetchAllClosedTickets / \" + error.message));\n//   }\n// };\n\nexport const fetchAllClosedTickets = () => async (dispatch) => {\n  dispatch(fetchTicketLoading());\n\n  try {\n    const result = await getAllClosedTickets();\n\n    // if there are tickets, dispatch \n    result.data.result.length && dispatch(fetchTicketSuccess(result.data.result));\n  } catch (error) {\n    dispatch(fetchTicketFailure(\"There are no closed tickets at the moment.\"));\n  }\n};\n\n\nexport const filterTicketsBySubject = (str) => (dispatch) => {\n  dispatch(searchTicketsBySubject(str));\n};\n\nexport const filterTicketsByOwner = (str) => (dispatch) => {\n  dispatch(searchTicketsByOwner(str));\n};\n\nexport const filterTicketsById = (str) => (dispatch) => {\n  dispatch(searchTicketsById(str));\n};\n\nexport const fetchSingleTicket = (_id) => async (dispatch) => {\n  dispatch(fetchSingleTicketLoading());\n\n  try {\n    const result = await getSingleTicket(_id);\n    // if there are multiple tickets, use the first one\n    dispatch(fetchSingleTicketSuccess(result.data.result));\n  } catch (error) {\n    dispatch(\n      fetchSingleTicketFailure(\"Error at fetchSingleTicket / \" + error.message)\n    );\n  }\n};\n\nexport const replyToTicket = (_id, msgObj) => async (dispatch) => {\n  dispatch(replyTicketLoading());\n\n  try {\n    const result = await addReplyToTicket(_id, msgObj);\n    if(result.status === \"error\"){\n      return dispatch(replyTicketFailure(\"Error at replyToTicket / \" + result.message));\n    }\n    dispatch(fetchSingleTicket(_id));\n    dispatch(replyTicketSuccess(result.message));\n  } catch (error) {\n    dispatch(replyTicketFailure(\"Error at replyToTicket / \" + error.message));\n  }\n};\n\nexport const closeTicket = (_id) => async (dispatch) => {\n  dispatch(closeTicketLoading());\n\n  try {\n    const result = await updateTicketStatusClosed(_id);\n    if(result.status === \"error\"){\n      return dispatch(closeTicketFailure(\"Error at updateTicketStatusClosed / \" + result.message));\n    }\n    dispatch(fetchSingleTicket(_id));\n    dispatch(closeTicketSuccess(result.message));\n  } catch (error) {\n    dispatch(closeTicketFailure(\"Error at updateTicketStatusClosed / \" + error.message));\n  }\n};\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst styles = {\n  logo: {\n    marginLeft: \"8px\",\n    paddingTop: \".5rem\",\n    paddingBottom: \".5rem\",\n    paddingLeft: \".5rem\",\n    paddingRight: \".5rem\",\n    borderRadius: \"0.1rem\",\n    boxShadow: \"0px 0px 15px -7px black\",\n  },\n  linkStyle: {\n    color: \"white\",\n    textDecoration: \"none\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n  },\n};\n\nexport const Header = () => {\n  const logMeOut = () => {\n    // crmSite is refreshJWT in local storage\n    localStorage.removeItem(\"crmSite\");\n    sessionStorage.removeItem(\"accessJWT\");\n  };\n\n  return (\n    <Navbar collapseOnSelect bg=\"dark\" variant=\"dark\" expand=\"md\">\n      <Navbar.Brand style={styles.logo}>\n        <h2>Ticket Tracker</h2>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav style={styles.linkPosition}>\n          <Link\n            to=\"/dashboard\"\n            style={styles.linkStyle}\n            onClick=\"window.location.reload\"\n          >\n            Dashboard\n          </Link>\n\n          <Link to=\"/add-ticket\" style={styles.linkStyle}>\n            Add Ticket\n          </Link>\n\n          <Link to=\"/open-tickets\" style={styles.linkStyle}>\n            Open Tickets\n          </Link>\n\n          <Link to=\"/closed-tickets\" style={styles.linkStyle}>\n            Closed Tickets\n          </Link>\n\n          <Link to=\"/\" onClick={logMeOut} style={styles.linkStyle}>\n            Logout\n          </Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"./partials/Header.comp\";\n\n\nexport const DefaultLayout = ({children}) => {\n  return (\n    <div className=\"default-layout\">\n      <header className=\"header\">\n        <Header />\n      </header>\n\n      <main className=\"main\">{children}</main>\n\n     \n    </div>\n  );\n\n}\n\nexport default DefaultLayout;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { DashboardTable } from \"../../components/dashboard-table/DashboardTable.comp\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { fetchAllTickets } from \"../manage-tickets/ticketsAction\";\nimport DefaultLayout from \"../../components/layout/DefaultLayout\";\n\nexport const Dashboard = () => {\n  const dispatch = useDispatch();\n  const { tickets } = useSelector((state) => state.tickets);\n  const totalTickets = tickets.length;\n  const openTickets = tickets.filter((ticket) => ticket.status === \"open\");\n  \n  \n  \n\n  // if no tickets are present in state, fetch them\n  useEffect(() => {\n    if (!tickets.length) {\n      dispatch(fetchAllTickets());\n    }\n  }, [tickets, dispatch]);\n\n\n  return (\n    <DefaultLayout>\n      <Container>\n        <Row>\n          <Col>\n            <PageBreadcrumb page=\"Dashboard\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-center mt-5 mb-2\">\n            <Link to=\"/add-ticket\">\n              <Button\n                variant=\"primary\"\n                style={{\n                  fontSize: \"2rem\",\n                  padding: \"10px 30px\",\n                  color: \"white\",\n                }}\n              >\n                Add New Ticket\n              </Button>\n            </Link>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"text-center mb-2\">\n            <h4>\n            <div>Open Tickets: {openTickets.length}</div>\n            </h4>\n            \n            <div>Total Tickets: {totalTickets}</div>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col className=\"mt-2\">\n            <h5>Recently Added Tickets</h5>\n          </Col>\n        </Row>\n        <hr />\n\n        <Row>\n          <Col className=\"recent-ticket\">\n            <DashboardTable tickets={tickets} />\n  \n          </Col>\n        </Row>\n      </Container>\n    </DefaultLayout>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  error: \"\",\n  successMsg: \"\",\n};\n\nconst newTicketSlice = createSlice({\n  name: \"newTicket\",\n  initialState,\n  reducers: {\n    openNewTicketPending: (state) => {\n      state.isLoading = true;\n    },\n    openNewTicketSuccess: (state, action) => {\n      state.isLoading = false;\n      state.successMsg = action.payload\n    },\n    openNewTicketFailure: (state, action) => {\n      state.isLoading = true;\n      state.error = action.payload\n    },\n    resetSuccessMsg: (state) => {\n      state.isLoading = false;\n      state.successMsg = \"\"\n    },\n  },\n});\n\nexport const {\n    openNewTicketPending,\n    openNewTicketSuccess,\n    openNewTicketFailure,\n    resetSuccessMsg,\n} = newTicketSlice.actions\nexport default newTicketSlice.reducer;\n\n","import { openNewTicketPending,\n    openNewTicketSuccess,\n    openNewTicketFailure} from './addTicketSlice';\nimport {createNewTicket} from '../../api/ticketAPI';  \n\nexport const openNewTicket = (formData) => dispatch => {\n    return new Promise( async (resolve, reject) => {\n        try {\n            \n            dispatch(openNewTicketPending());\n\n            const result = await createNewTicket(formData);\n\n            if(result.status === \"error\"){  \n                dispatch(openNewTicketFailure(result.message));\n                reject(result.message);\n            };\n\n            dispatch(openNewTicketSuccess(result.message));\n            \n        } catch (error) {\n            console.log(error);\n            dispatch(openNewTicketFailure(\"Error at openNewTicket /\" + error.message));\n        }\n    })\n}\n\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button, Row, Col, Spinner, Alert } from \"react-bootstrap\";\nimport { subjectText } from \"../../utils/validation.js\";\nimport { openNewTicket } from \"./addTicketAction\";\nimport { resetSuccessMsg } from \"./addTicketSlice\";\n\nconst styles = {\n  jumbotron: {\n    backgroundColor: \"white\",\n    paddingTop: \"4rem\",\n    paddingBottom: \"4rem\",\n    paddingLeft: \"2rem\",\n    paddingRight: \"2rem\",\n    borderRadius: \"0.5rem\",\n    boxShadow: \"0px 0px 15px -7px black\",\n    maxWidth: \"700px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n};\n\nconst initialFormData = {\n  subject: \"\",\n  issueDate: \"\",\n  message: \"\",\n};\n\n// used for field validation\nconst initialFormDataError = {\n  subject: false,\n  issueDate: false,\n  message: false,\n};\n\nexport const AddTicketForm = () => {\n  const dispatch = useDispatch();\n\n  const {\n    user: { name },\n  } = useSelector((state) => state.user);\n\n  const { isLoading, error, successMsg } = useSelector(\n    (state) => state.openTickets\n  );\n\n  const [formData, setFormData] = useState(initialFormData);\n  const [formDataError, setFormDataError] = useState(initialFormDataError);\n\n  // is successMsg is present, reset to empty string on load\n  useEffect(() => {\n\n    if(successMsg) {\n      dispatch(resetSuccessMsg());\n    }\n  }, [ dispatch, formData, formDataError]);\n\n\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n\n    setFormDataError(initialFormDataError);\n   \n    const isSubjectValid = await subjectText(formData.subject);\n\n    setFormDataError({\n      ...initialFormDataError,\n      subject: !isSubjectValid,\n    });\n\n    dispatch(openNewTicket({ ...formData, sender: name }));\n  };\n\n  return (\n    <div style={styles.jumbotron}>\n      <h1 className=\"text-primary text-center\">Add a New Ticket</h1>\n      <hr />\n      <div>\n        {error && <Alert variant=\"danger\">{error}</Alert>}\n        {successMsg && <Alert variant=\"primary\">{successMsg}</Alert>}\n        {isLoading && <Spinner variant=\"primary\" animation=\"border\" />}\n      </div>\n      <Form autoComplete=\"off\" onSubmit={handleOnSubmit}>\n        <Form.Group as={Row}>\n          <Form.Label column sm={3}>\n            Subject\n          </Form.Label>\n          <Col>\n            <Form.Control\n              type=\"text\"\n              name=\"subject\"\n              value={formData.subject}\n              onChange={handleOnChange}\n              placeholder=\"Subject\"\n              required\n            />\n            <Form.Text className=\"text-danger\">\n              {formDataError.subject && \"Subject is required.\"}\n            </Form.Text>\n          </Col>\n        </Form.Group>\n        {/* consider removing the date field.  this should probably populate the db automatically */}\n        <Form.Group as={Row} style={{ marginTop: \"10px\" }}>\n          <Form.Label column sm={3}>\n            Date\n          </Form.Label>\n          <Col>\n            <Form.Control\n              type=\"date\"\n              value={formData.date}\n              name=\"issueDate\"\n              onChange={handleOnChange}\n              required\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row} style={{ marginTop: \"10px\" }}>\n          <Form.Label column sm={3}>\n            Issue Found\n          </Form.Label>\n          <Col>\n            <Form.Control\n              as=\"textarea\"\n              value={formData.message}\n              name=\"message\"\n              rows=\"5\"\n              onChange={handleOnChange}\n              required\n            />\n            <Form.Text className=\"text-danger\">\n              {formDataError.message && \"Subject details are required.\"}\n            </Form.Text>\n          </Col>\n        </Form.Group>\n\n        <Button\n          style={{ marginTop: \"18px\", color: \"white\", width: \"100%\" }}\n          type=\"submit\"\n          variant=\"primary\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\n","export const subjectText = str => {\n    return str.length >=3 && str.length <=175\n}\n\nexport const detailText = str => {\n    return str.length >=3 && str.length <=1000\n}","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { AddTicketForm } from \"../../components/add-ticket-form/AddTicketForm.comp\";\nimport DefaultLayout from \"../../components/layout/DefaultLayout\";\n\n\nexport const AddTicket = () => {\n  \n  return (\n    <DefaultLayout>\n      <Container>\n        <Row>\n          <Col>\n            <PageBreadcrumb page=\"Add Ticket\" />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <AddTicketForm />\n          </Col>\n        </Row>\n      </Container>\n    </DefaultLayout>\n  );\n};\n","import React from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { filterTicketsBySubject } from \"../../pages/manage-tickets/ticketsAction\";\n\nexport const SearchBySubjectForm = () => {\n  const dispatch = useDispatch();\n\n  const handleOnChange = (e) => {\n    const { value } = e.target;\n    dispatch(filterTicketsBySubject(value));\n  };\n\n  return (\n    <div>\n      <Form>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            Search By Subject:{\"\"}\n          </Form.Label>\n          <Col sm=\"7\">\n            <Form.Control\n              name=\"searchStr\"\n              type=\"text\"\n              placeholder=\"Search ...\"\n              onChange={handleOnChange}\n            />\n          </Col>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { filterTicketsById } from \"../../pages/manage-tickets/ticketsAction\";\n\nexport const SearchByIdForm = () => {\n  const dispatch = useDispatch();\n\n  const handleOnChange = (e) => {\n    const { value } = e.target;\n    dispatch(filterTicketsById(value));\n  };\n\n  return (\n    <div>\n      <Form>\n        <Form.Group as={Row}>\n          <Form.Label column sm=\"5\">\n            Search By Ticket ID:{\"\"}\n          </Form.Label>\n          <Col sm=\"7\">\n            <Form.Control\n              name=\"searchStr\"\n              type=\"text\"\n              placeholder=\"Search ...\"\n              onChange={handleOnChange}\n            />\n          </Col>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const TicketTable = () => {\n  const { searchTicketList, tickets, isLoading, error } = useSelector(\n    (state) => state.tickets\n  );\n\n  if (isLoading) return <h3>Loading...</h3>;\n\n  if (error) return <h3>{error}</h3>;\n\n  return (\n    <Table striped bordered hover>\n      {/* <thead? groups header content in the table */}\n      <thead>\n        {/* <tr>defines a row of cells in the table */}\n        <tr>\n          {/* <th> defines the header cells in the table */}\n          <th>Subject</th>\n          <th>Status</th>\n          <th>Opened Date</th>\n          <th>Ticket ID</th>\n          <th>Opened By</th>\n        </tr>\n      </thead>\n      <tbody>\n        {/* ternary operator is used to populate table with No Tickets Exist message if there are not tickets */}\n        {tickets.length ? (\n          searchTicketList.map((row) => (\n            <tr key={row._id}>\n               <td>\n                {/* the link below adds the selected ticket's id as a parameter to the /tickets:tId route */}\n                <Link to={`/ticket/${row._id}`}>{row.subject}</Link>\n              </td>\n              <td>{row.status}</td>\n              <td>{row.openedAt && new Date(row.openedAt).toLocaleString()}</td>\n              <td>{row._id}</td>\n              <td>{row.conversations[0].sender}</td>\n            </tr>\n          ))\n        ) : (\n          <tr>\n            <td colSpan=\"4\" className=\"text-center\">\n              No Tickets Exist\n            </td>\n          </tr>\n        )}\n      </tbody>\n    </Table>\n  );\n};\n\n\n\n\n\n\n\n\n\n\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAllOpenTickets, } from \"./ticketsAction\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { SearchBySubjectForm } from \"../../components/search-form/SearchBySubjectForm.comp\";\n// import { SearchByOwnerForm } from \"../../components/search-form/SearchByOwnerForm.comp\";\nimport { SearchByIdForm } from \"../../components/search-form/SearchByIdForm.comp\";\nimport { TicketTable } from \"../../components/ticket-table/TicketTable.comp\";\nimport DefaultLayout from \"../../components/layout/DefaultLayout\";\n\nexport const OpenTickets = () => {\n  const dispatch = useDispatch();\n  \n\n  useEffect(() => {\n    dispatch(fetchAllOpenTickets());\n  }, [dispatch]);\n\n  return (\n    <DefaultLayout>\n      <Container>\n        <Row>\n          <Col>\n            <PageBreadcrumb page=\"Open Tickets \" />\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <Link to=\"/add-ticket\">\n              <Button variant=\"primary\" style={{ color: \"white\" }}>\n                Add New Ticket\n              </Button>\n            </Link>\n          </Col>\n          <Col className=\"text-right\">\n            <SearchBySubjectForm />\n          </Col>\n          <Col className=\"text-right\">\n            <SearchByIdForm />\n          </Col>\n        </Row>\n        <hr />\n        <Col>\n          <TicketTable />\n        </Col>\n      </Container>\n    </DefaultLayout>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAllClosedTickets } from \"./ticketsAction\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { SearchBySubjectForm } from \"../../components/search-form/SearchBySubjectForm.comp\";\nimport { SearchByIdForm } from \"../../components/search-form/SearchByIdForm.comp\";\nimport { TicketTable } from \"../../components/ticket-table/TicketTable.comp\";\nimport DefaultLayout from \"../../components/layout/DefaultLayout\";\n\nexport const ClosedTickets = () => {\n  const dispatch = useDispatch();\n  \n\n  useEffect(() => {\n    dispatch(fetchAllClosedTickets());\n  }, [dispatch]);\n\n  return (\n    <DefaultLayout>\n      <Container>\n        <Row>\n          <Col>\n            <PageBreadcrumb page=\"Closed Tickets \" />\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <Link to=\"/add-ticket\">\n              <Button variant=\"primary\" style={{ color: \"white\" }}>\n                Add New Ticket\n              </Button>\n            </Link>\n          </Col>\n          <Col className=\"text-right\">\n            <SearchBySubjectForm />\n          </Col>\n          <Col className=\"text-right\">\n            <SearchByIdForm />\n          </Col>\n        </Row>\n        <hr />\n        <Col>\n          <TicketTable />\n        </Col>\n      </Container>\n    </DefaultLayout>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./message-history.style.css\";\n\nexport const MessageHistory = ({ msg }) => {\n  !msg && (msg = []);\n\n  return msg.map((row, index) => (\n    \n      <div key={index} className=\"message-history mt-3\">\n        <div className=\"send text-secondary\">\n          <div className=\"sender\">{row.sender}</div>\n          {/* toLocalString makes date readable.  row.msgAt alone could be use, but is difficult to read. */}\n          <div className=\"date\">{row.msgAt && new Date(row.msgAt).toLocaleString()}</div>\n        </div>\n        <div className=\"message\">{row.message}</div>\n      </div>\n  ));\n};\n\nMessageHistory.propTypes = {\n  msg: PropTypes.array.isRequired,\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { replyToTicket } from \"../../pages/manage-tickets/ticketsAction\";\nimport PropTypes from \"prop-types\";\n\nexport const UpdateTicket = ({ _id }) => {\n  const dispatch = useDispatch();\n\n  // gets user's name from state\n  const {\n    user: { name },\n  } = useSelector((state) => state.user);\n\n  const [message, setMessage] = useState(\"\");\n\n  const handleOnChange = (e) => {\n    setMessage(e.target.value);\n  };\n\n  // the handleOnSubmit below can be used to prevent submitting reply w/o any text.  Look for a better solution\n  \n  // const handleOnSubmit = (e) => {\n  //   e.preventDefault();\n  //   const msgObj = {\n  //     message,\n  //     sender: name,\n  //   };\n  //   if (message === \"\") {\n  //     alert(\"Please enter a message.\");\n  //   } else {\n  //     //  _id is imported as a prop from Ticket.page.js\n  //     dispatch(replyToTicket(_id, msgObj));\n  //     // clear reply field after submit\n  //     setMessage(\"\");\n  //   }\n  // };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    const msgObj = {\n      message,\n      sender: name,\n    };\n      //  _id is imported as a prop from Ticket.page.js\n      dispatch(replyToTicket(_id, msgObj));\n      // clear reply field after submit\n      setMessage(\"\");\n    }\n  \n\n  return (\n    <div>\n      <Form onSubmit={handleOnSubmit}>\n        <Form.Label>Reply</Form.Label>\n        <div>\n          <Form.Text>Add your message here.</Form.Text>\n        </div>\n        <Form.Control\n          value={message}\n          onChange={handleOnChange}\n          as=\"textarea\"\n          row=\"5\"\n          name=\"detail\"\n        />\n        <div className=\"text-end mt-2 mb-2\">\n          <Button variant=\"primary\" type=\"submit\">\n            Reply\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nUpdateTicket.propTypes = {\n  _id: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Row, Col, Button, Spinner, Alert } from \"react-bootstrap\";\nimport { PageBreadcrumb } from \"../../components/breadcrumb/Breadcrumb.comp\";\nimport { MessageHistory } from \"../../components/message-history/MessageHistory.comp\";\nimport { UpdateTicket } from \"../../components/update-ticket/UpdateTicket.comp\";\nimport DefaultLayout from \"../../components/layout/DefaultLayout\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchSingleTicket, closeTicket } from \"../manage-tickets/ticketsAction\";\nimport { resetReplyMsg } from \"../manage-tickets/ticketSlice\";\n\nexport const Ticket = () => {\n\n  // tId is the parameter used in the \"/ticket/:tId\" route in app.js\n  const { tId } = useParams();\n  const dispatch = useDispatch();\n  const { isLoading, error, selectedTicket, replyMsg, replyTicketError } = useSelector((state) => state.tickets);\n \n  \n  \n  useEffect(() => {\n    // fetches ticket for display on page\n    dispatch(fetchSingleTicket(tId));\n    // is successMsg is present, reset to empty string\n    if(replyMsg) {\n      dispatch(resetReplyMsg());\n    }\n  }, [tId, dispatch]);\n\n  return (\n    <DefaultLayout>\n      <Container>\n        <Row>\n          <Col>\n            <PageBreadcrumb page=\"Ticket Search\" />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            {isLoading &&<Spinner variant=\"info\" animation=\"border\" />}\n            {error &&<Alert variant=\"danger\">{error}</Alert>}\n            {replyTicketError &&<Alert variant=\"danger\">{replyTicketError}</Alert>}\n            {replyMsg && <Alert variant=\"success\">{replyMsg}</Alert>}\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"text-secondary\">\n            <div className=\"subject\">Subject: {selectedTicket.subject}</div>\n            {/* if there is selectedTicket.openedAt, convert it to readable date */}\n            <div className=\"date\">Ticket Opened: {selectedTicket.openedAt && new Date\n            (selectedTicket.openedAt).toLocaleString()}</div>\n            <div className=\"status\">Status: {selectedTicket.status}</div>\n          </Col>\n          <Col className=\"text-right\">\n            <Button \n            variant=\"outline-info\" \n            onClick={() => dispatch(closeTicket(tId))}\n            disabled={selectedTicket.status === \"closed\"}\n            >Close Ticket</Button>\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          {/* conditional rendering of ticket history prevents error in console if history is not present */}\n          <Col>{selectedTicket.conversations && <MessageHistory msg={selectedTicket.conversations} />}</Col>\n        </Row>\n        <hr />\n        <Row className=\"mt-4\">\n          <Col>\n          {/* _id is passed to UpdateTicket.comp */}\n            <UpdateTicket _id={tId}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </DefaultLayout>\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isLoading: false,\n  status: \"\",\n  message: \"\",\n};\n\nconst userRegistrationSlice = createSlice({\n  name: \"userRegistration\",\n  initialState,\n  reducers: {\n    registrationPending: (state) => {\n      state.isLoading = true;\n    },\n    registrationSuccess: (state, action) => {\n      state.isLoading = false;\n      state.status = \"success\";\n      state.message = action.payload;\n    },\n    registrationFailure: (state, action) => {\n      state.isLoading = false;\n      state.status = \"error\";\n      state.message = action.payload;\n    },\n  },\n});\n\nconst { reducer, actions } = userRegistrationSlice;\n\nexport const {\n    registrationPending,\n    registrationSuccess,\n    registrationFailure\n} = actions;\n\nexport default reducer;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Spinner,\n  Alert,\n} from \"react-bootstrap\";\nimport { newUserRegistration } from \"./userRegistrationAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n\nconst initialState = {\n  name: \"\",\n  phone: \"\",\n  email: \"\",\n  company: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst passwordVerificationError = {\n  isLongEnough: false,\n  hasUpperCase: false,\n  hasLowerCase: false,\n  hasNumber: false,\n  hasSpecial: false,\n  confirmPassword: false,\n};\n\n\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const [newUser, setNewUser] = useState(initialState);\n  const [passwordError, setPasswordError] = useState(passwordVerificationError);\n\n  const { isLoading, status, message } = useSelector(\n    (state) => state.registration\n  );\n\n  //   re-renders component when newUser receives input\n  useEffect(() => {}, [newUser]);\n\n  //   show text in field as text is entered\n  const handleOnChange = (e) => {\n    const { name, value } = e.target;\n    setNewUser({ ...newUser, [name]: value });\n\n    if (name === \"password\") {\n      // sets value of each variable to true if the password meets the criteria\n      const isLongEnough = value.length >= 8;\n      const hasUpperCase = /[A-Z]/.test(value);\n      const hasLowerCase = /[a-z]/.test(value);\n      const hasNumber = /[0-9]/.test(value);\n      const hasSpecial =\n        /[ !,\",#,$,%,&,',(,),*,+,-,.,/,:,;,<,=,>,?,@,[,^,_,`,{,|,} ]/.test(\n          value\n        );\n\n      setPasswordError({\n        ...passwordError,\n        isLongEnough,\n        hasUpperCase,\n        hasLowerCase,\n        hasNumber,\n        hasSpecial,\n      });\n    }\n    // when confirm password field receives input, confirmPassword is set to true if newUser.password == the value input into confirm password\n    if (name === \"confirmPassword\") {\n      setPasswordError({\n        ...passwordError,\n        confirmPassword: newUser.password === value,\n      });\n    }\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    dispatch(newUserRegistration(newUser));\n  };\n\n  \n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1 className=\"text-primary\">User Registration</h1>\n        </Col>\n      </Row>\n      <hr />\n\n      <Row>\n        <Col>\n          {message && (\n            <Alert variant={status === \"success\" ? \"success\" : \"danger\"}>\n              {message}\n            </Alert>\n          )}\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Form onSubmit={handleOnSubmit}>\n\n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Full Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    value={newUser.name}\n                    onChange={handleOnChange}\n                    placeholder=\"Your Name\"\n                  />\n                </Form.Group>\n              </Col>\n\n              <Col>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Phone Number</Form.Label>\n                  <Form.Control\n                    type=\"phoneNumber\"\n                    name=\"phone\"\n                    value={newUser.phone}\n                    onChange={handleOnChange}\n                    placeholder=\"Phone Number\"\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Email Address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    name=\"email\"\n                    value={newUser.email}\n                    onChange={handleOnChange}\n                    placeholder=\"Enter Email\"\n                  />\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Company Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"company\"\n                    value={newUser.company}\n                    onChange={handleOnChange}\n                    placeholder=\"Company Name\"\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n\n            <Row>\n              <Col>\n              <Form.Group className=\"mb-3\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={newUser.password}\n                onChange={handleOnChange}\n                placeholder=\"Password\"\n              />\n            </Form.Group>\n              </Col>\n              <Col>\n              <Form.Group className=\"mb-3\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"confirmPassword\"\n                value={newUser.confirmPassword}\n                onChange={handleOnChange}\n                placeholder=\"Confirm Password\"\n              />\n            </Form.Group>\n              </Col>\n            </Row>\n\n            \n            <div className=\"mb-2\">\n              {/* ternary operators to determine className applied to text */}\n              <div className=\"mb-2 text-center\">Password Requirements:</div>\n              <div className=\"text-center\">\n              <div\n                className={\n                  passwordError.isLongEnough ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least 8 characters {\"\"}\n                {passwordError.isLongEnough ? <>&#10003;</> : \"\"}\n              </div>\n              <div\n                className={\n                  passwordError.hasUpperCase ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one upper case letter {\"\"}\n                {passwordError.hasUpperCase ? <>&#10003;</> : \"\"}\n              </div>\n              <div\n                className={\n                  passwordError.hasLowerCase ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one lower case letter {\"\"}\n                {passwordError.hasLowerCase ? <>&#10003;</> : \"\"}\n              </div>\n              <div\n                className={\n                  passwordError.hasNumber ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one number {\"\"}\n                {passwordError.hasNumber ? <>&#10003;</> : \"\"}\n              </div>\n              <div\n                className={\n                  passwordError.hasSpecial ? \"text-success\" : \"text-danger\"\n                }\n              >\n                At least one special character {\"\"}\n                {passwordError.hasSpecial ? <>&#10003;</> : \"\"}\n              </div>\n\n              <div\n                className={\n                  passwordError.confirmPassword ? \"text-success\" : \"text-danger\"\n                }\n              >\n                Passwords match {\"\"}\n                {passwordError.confirmPassword ? <>&#10003;</> : \"\"}\n              </div>\n            </div>\n              </div>\n          \n            <div className=\"text-center\">\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={Object.values(passwordError).includes(false)}\n              >\n                Submit\n              </Button>\n            </div>\n\n            {isLoading && <Spinner animation=\"border\" variant=\"primary\" />}\n          </Form>\n        </Col>\n      </Row>\n\n      <Row className=\"py-3 text-center\">\n        <Col>\n          Already have an account? {\"\"}\n          <a href=\"/\">Login</a>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RegistrationForm;\n","import {\n  registrationPending,\n  registrationSuccess,\n  registrationFailure,\n} from \"./userRegistrationSlice\";\nimport { userRegistration } from \"../../api/userAPI\";\n\nexport const newUserRegistration = (formData) => async (dispatch) => {\n  dispatch(registrationPending());\n  try {\n    const result = await userRegistration(formData);\n\n    result.status === \"success\" \n    ? dispatch(registrationSuccess(result.message))\n    : dispatch(registrationFailure(result.message));\n\n  } catch (error) {\n    dispatch(registrationFailure(error.message));\n    console.log(\"Error at userRegistration / \" + error.message);\n  }\n};\n","import React from 'react';\nimport RegistrationForm from '../../components/registration-form/RegistrationForm.comp';\nimport \"./registration.style.css\";\n\nconst styles = {\n  jumbotron: {\n    backgroundColor: \"white\",\n    // defines size of area around text\n    paddingTop: \"4rem\",\n    paddingBottom: \"4rem\",\n    paddingLeft: \"2rem\",\n    paddingRight: \"2rem\",\n    // rounds the edges\n    borderRadius: \"0.5rem\",\n    boxShadow: \"0px 0px 15px -7px black\",\n  }\n};\n\n\nexport const Registration = () => {\n  return  <div className=\"registration-page bg-dark\">\n  <div style={styles.jumbotron}>\n   <RegistrationForm />\n  </div>\n</div>\n}\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport { Spinner, Alert } from \"react-bootstrap\";\nimport \"./userVerification.style.css\";\nimport { useParams } from \"react-router-dom\";\nimport { userRegistrationVerification } from \"../../api/userAPI\";\n\nconst styles = {\n  jumbotron: {\n    backgroundColor: \"white\",\n    // defines size of area around text\n    paddingTop: \"4rem\",\n    paddingBottom: \"4rem\",\n    paddingLeft: \"2rem\",\n    paddingRight: \"2rem\",\n    // rounds the edges\n    borderRadius: \"0.5rem\",\n    boxShadow: \"0px 0px 15px -7px black\",\n  },\n};\n\nconst initialResponse = {\n  status: \"\",\n  message: \"\",\n};\n\nexport const UserVerification = () => {\n  const { _id, email } = useParams();\n  const data = { _id, email };\n  const [response, setResponse] = useState(initialResponse);\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const result = await userRegistrationVerification(data);\n      setResponse(result);\n    };\n    !response.status && apiCall();\n  }, [response]);\n\n  return (\n    <div className=\"entry-page bg-info\">\n      <div style={styles.jumbotron}>\n        {/* reminder: the spinner gets stuck if user submits this and is already verified.  Should provide an error */}\n        {!response.status && <Spinner variant=\"info\" animation=\"border\" />}\n        {response.status && (\n          <Alert variant={response.status === \"success\" ? \"success\" : \"danger\"}>\n            {response.message}\n          </Alert>\n        )}\n        <div>\n          <a href=\"/\" style={{display: 'flex', justifyContent: 'center'}}>Login</a>\n        </div>\n      </div>\n      \n    </div>\n  );\n};\n","import \"./App.css\";\nimport React, { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport { Entry } from \"./pages/entry/Entry.page\";\nimport { PasswordOtpForm } from \"./pages/password-reset/passwordOtpForm.page\";\nimport { Dashboard } from \"./pages/dashboard/Dashboard.page\";\nimport { AddTicket } from \"./pages/new-ticket/AddTicket.page\";\nimport { OpenTickets } from \"./pages/manage-tickets/OpenTickets.page\";\nimport { ClosedTickets } from \"./pages/manage-tickets/ClosedTickets.page\";\nimport { Ticket } from \"./pages/ticket/Ticket.page\";\nimport { Registration } from \"./pages/registration/Registration.page\";\nimport { UserVerification } from \"./pages/user-verification/UserVerification.page\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { loginSuccess } from \"./components/login/loginSlice\";\nimport { fetchNewAccessJWT } from \"./api/userAPI\";\nimport { getUserProfile } from \"./pages/dashboard/userAction\";\n\nfunction App() {\n  const PrivateRoute = ({ children }) => {\n    const dispatch = useDispatch();\n    const { isAuth } = useSelector((state) => state.login);\n    const { user } = useSelector((state) => state.user);\n\n    useEffect(() => {\n      const updateAccessJWT = async () => {\n        // get a new accessJWT and assign it to result\n        const result = await fetchNewAccessJWT();\n        // us there is a result, dispatch loginSuccess whish sets state.isLoading to false and state.isAuth to true\n        result && dispatch(loginSuccess());\n      };\n\n      // if accessJWT is not in session storage and crmSIte is in local storage, update set new accessJWT to session storage\n      if (\n        !sessionStorage.getItem(\"accessJWT\") &&\n        localStorage.getItem(\"crmSite\")\n      ) {\n        updateAccessJWT();\n      }\n\n      // if isAuth is false, and accessJWT is in session storage (which should be accomplished by fetchNewAccessJWT), dispatch LoginSuccess to set state.isLoading to false and state.isAuth to true\n      if (!isAuth && sessionStorage.getItem(\"accessJWT\")) {\n        dispatch(loginSuccess());\n      }\n\n      // this may not be needed\n      // if no user._id in state, dispatch getUserProfile.  getUserProfile awaits fetchUser from userAPI, then dispatches getUserSuccess with user data as a parameter. getUserSuccess adds thr user data to state\n      if (!user._id) {\n        dispatch(getUserProfile());\n      }\n    }, [dispatch, isAuth, user._id]);\n\n    // if isAuth is true, render whatever is child of <PrivateRoute>.  otherwise, redirect to \"/\"\n    return isAuth ? children : <Navigate to=\"/\" />;\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Entry />} />\n          <Route path=\"/registration\" element={<Registration />} />\n          <Route\n            path=\"/verification/:_id/:email\"\n            element={<UserVerification />}\n          />\n          <Route path=\"/password-reset\" element={<PasswordOtpForm />} />\n          <Route\n            path=\"/dashboard\"\n            element={\n              <PrivateRoute>\n                <Dashboard />\n              </PrivateRoute>\n            }\n          />\n          <Route\n            path=\"/add-ticket\"\n            element={\n              <PrivateRoute>\n                <AddTicket />\n              </PrivateRoute>\n            }\n          />\n          <Route\n            path=\"/open-tickets\"\n            element={\n              <PrivateRoute>\n                <OpenTickets />\n              </PrivateRoute>\n            }\n          />\n\n          <Route\n            path=\"/closed-tickets\"\n            element={\n              <PrivateRoute>\n                <ClosedTickets />\n              </PrivateRoute>\n            }\n          />\n\n          <Route\n            path=\"/ticket/:tId\"\n            element={\n              <PrivateRoute>\n                <Ticket />\n              </PrivateRoute>\n            }\n          />\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport ticketsReducer from \"./pages/manage-tickets/ticketSlice\";\nimport loginReducer from \"./components/login/loginSlice\";\nimport userReducer from \"./pages/dashboard/userSlice\";\nimport newTicketReducer from './components/add-ticket-form/addTicketSlice'\nimport registrationReducer from \"./components/registration-form/userRegistrationSlice\";\nimport passwordReducer from \"./components/password-reset/passwordSlice\";\n\nconst store = configureStore({\n  reducer: {\n    tickets: ticketsReducer,\n    login: loginReducer,\n    user: userReducer,\n    openTickets: newTicketReducer,\n    registration: registrationReducer,\n    password: passwordReducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}